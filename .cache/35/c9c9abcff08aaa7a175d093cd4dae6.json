{"id":"shader/vertex.glsl","dependencies":[{"name":"/Users/kevinkele/Desktop/Webjl/model 2/public/package.json","includedInParent":true,"mtime":1586627424239}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\n// attribute vec2 a_position;\\nuniform float uFrequency ;\\nuniform float uTime;\\nattribute float aRandom;\\nvarying float vRandom;\\nvarying vec3 vModelPosition;\\nuniform vec2 u_resolution;\\n// uniform vec2 u_translation;\\n// uniform vec2 u_rotation;\\n\\nvoid main ()\\n{\\n\\n    // rotation\\n    // vec2 position = vec2(a_position.x*u_rotation.y+a_position.y*u_rotation.x,a_position.y*u_rotation.y-a_position.x*u_rotation.x);\\n\\n    //  ajoute translation\\n\\n    // vec2 position2 = position +u_translation\\n\\n    vRandom=aRandom;\\n    vec4 modelPosition = modelMatrix*vec4(position,6);\\n        modelPosition.x += sin(modelPosition.x * 8.0)*1.5;\\n        modelPosition.y += sin(modelPosition.x * 5.0)*0.5;\\n        modelPosition.z += sin(modelPosition.x * 9.0)*0.2;\\n        vModelPosition=modelPosition.xyz;\\n    vec4 viewPosition = viewMatrix*modelPosition;\\n    vec4 projectedPosition = projectionMatrix*viewPosition;\\n\\n    gl_Position = projectedPosition;\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"shader/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"shader/vertex.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"shader/vertex.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"shader/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"shader/vertex.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":998},"source":"shader/vertex.glsl","original":{"line":1,"column":0}}],"sources":{"shader/vertex.glsl":"module.exports=\"#define GLSLIFY 1\\n// attribute vec2 a_position;\\nuniform float uFrequency ;\\nuniform float uTime;\\nattribute float aRandom;\\nvarying float vRandom;\\nvarying vec3 vModelPosition;\\nuniform vec2 u_resolution;\\n// uniform vec2 u_translation;\\n// uniform vec2 u_rotation;\\n\\nvoid main ()\\n{\\n\\n    // rotation\\n    // vec2 position = vec2(a_position.x*u_rotation.y+a_position.y*u_rotation.x,a_position.y*u_rotation.y-a_position.x*u_rotation.x);\\n\\n    //  ajoute translation\\n\\n    // vec2 position2 = position +u_translation\\n\\n    vRandom=aRandom;\\n    vec4 modelPosition = modelMatrix*vec4(position,6);\\n        modelPosition.x += sin(modelPosition.x * 8.0)*1.5;\\n        modelPosition.y += sin(modelPosition.x * 5.0)*0.5;\\n        modelPosition.z += sin(modelPosition.x * 9.0)*0.2;\\n        vModelPosition=modelPosition.xyz;\\n    vec4 viewPosition = viewMatrix*modelPosition;\\n    vec4 projectedPosition = projectionMatrix*viewPosition;\\n\\n    gl_Position = projectedPosition;\\n}\";"},"lineCount":null}},"error":null,"hash":"27098f8e624821dd4a87ddb056d9f034","cacheData":{"env":{}}}